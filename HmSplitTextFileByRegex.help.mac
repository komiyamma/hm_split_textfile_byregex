/*
 * HmSplitTextFileByRegex v1.0.5.4
 *
 * Copyright (c) 2024 Akitsugu Komiyama
 * under the MIT License
 */

hidemaruversion "9.25.99";

// これを「秀丸マクロの層」で入れて表示だけでもしておかないと、JSからキックしたら１秒ほど遅くなってしまう。
// NeedConfirm(=マクロ引数が無い)である時だけ出す。ここで記述したくはないがあまりにも速度が違うので仕方がない。
if (filename2 != "" && getarg(0) == "") {
    renderpanecommand
    """"""""""""""""""""""""""""""""""""""""
    {
        "target": "HmSplitTextFileByRegex",
        "show": 1,
    }
    """""""""""""""""""""""""""""""""""""""";
}

jsmode "WebView2";
js {

// 最初のレンダリングペインCompleteチェック用のものは、比較的細やかにチェックする。
// これは表示しをえたら直ぐにIntervalが止まるのでIntervalが小さくでも大丈夫
var idIntervalInitialize_HmSplitTextFileByRegex;

// ラベルはこのマクロ独自にしておく
let strTargetLabel_HmSplitTextFileByRegex = "HmSplitTextFileByRegex";

function showHelp_HmSplitTextFileByRegex() {

    const currentmacrodir = currentmacrodirectory();

    try {

        // レンダリングペインを開く
        function openRenderPane() {
            // カレントマクロフォルダのhtmlファイルを使う
            const absoluteUrl = new URL(currentmacrodir + "\\" + "HmSplitTextFileByRegex.help.html").href;

            const json_arg = {
                target: strTargetLabel_HmSplitTextFileByRegex,
                uri: absoluteUrl,
                show: 1,
                place: "leftside",
            };

            renderpanecommand(json_arg);
        }

        // 本当にレンダリングペインが開いて準備がととのったのかのチェック
        let checkCount_HmSplitTextFileByRegex = 0;
        function checkComplete_HmSplitTextFileByRegex() {
            let readyState = renderpanecommand({ target: strTargetLabel_HmSplitTextFileByRegex, get: "readyState" });
            if (readyState == "complete") {
                hidemaru.clearInterval(idIntervalInitialize_HmSplitTextFileByRegex);
                hidemaru.postExecMacroFile( currentmacrodir + "\\" + "HmSplitTextFileByRegex.prev.mac" );
            }
        }

        openRenderPane();

        // 次のマクロ実行の際に見るのでletではなくvarにして、ライフサイクルを js { } 外に伸ばす必要がある。
        // 他のjsを使った秀丸マクロと決して被らない「マクロ空間」にしておく必要がある。(よってtickcount空間という被らない空間に配置している)
        if (typeof (idIntervalInitialize_HmSplitTextFileByRegex) != "undefined") {
            hidemaru.clearInterval(idIntervalInitialize_HmSplitTextFileByRegex);
        }
        idIntervalInitialize_HmSplitTextFileByRegex = hidemaru.setInterval(checkComplete_HmSplitTextFileByRegex, 300);
    } catch(err) {
        outputAlert(err);
    }
}

showHelp_HmSplitTextFileByRegex();

} // js

